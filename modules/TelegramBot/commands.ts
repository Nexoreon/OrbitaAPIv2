/* eslint-disable max-len */
import Configuration from '../../models/configurationModel';
import bot from '../../utils/TelegramBot';

export const handleShowCommands = async (chatId: number) => {
    bot.sendMessage(chatId, `
    /help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ 
    /check_streamers - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å—Ç—Ä–∏–º–µ—Ä–æ–≤
    /check_games - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∏–≥—Ä
    /get_latest_report - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á—ë—Ç
    /control_notifications - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π`,
    );
};

export const handleNotifications = async (chatId: number) => {
    const config = await Configuration.findOne({ appId: 1 });
    const { enableCrashNotifications, enableSendingNotifications, enableTGBotNotifications } = config!.settings;
    bot.sendMessage(chatId, `
    Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${enableTGBotNotifications ? 'üü©' : 'üü•'}
    Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${enableSendingNotifications ? 'üü©' : 'üü•'}
    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫—Ä–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${enableCrashNotifications ? 'üü©' : 'üü•'}
        `, {
        parse_mode: 'HTML',
        reply_markup: {
            inline_keyboard: [
                [{ text: `${enableTGBotNotifications ? '–í—ã–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram`, callback_data: '/settings_notifications_tg' }],
                [
                    { text: `${enableSendingNotifications ? '–í—ã–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'} push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è`, callback_data: '/settings_notifications_push' },
                    { text: `${enableCrashNotifications ? '–í—ã–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫—Ä–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è`, callback_data: '/settings_notifications_crash' },
                ],
            ],
        },
    });
};
